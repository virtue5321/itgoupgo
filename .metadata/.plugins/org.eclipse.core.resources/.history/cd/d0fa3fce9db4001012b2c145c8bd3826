package com.itgoupgo.community.admin.model.dao;

import java.util.List;
import java.util.Map; // Map import 추가

import org.apache.ibatis.session.RowBounds;
import org.mybatis.spring.SqlSessionTemplate;
import org.springframework.stereotype.Repository;

import com.itgoupgo.community.common.model.vo.PageInfo;
import com.itgoupgo.community.member.model.vo.Member;

@Repository
public class AdminDao {
	
    // 💡 1. 전체 회원 수 조회
    public int selectListCount(SqlSessionTemplate sqlSession) {
        return sqlSession.selectOne("adminMapper.selectListCount");
    }
    
    // 💡 2. 페이징 처리된 전체 회원 목록 조회 (RowBounds 사용)
 	public List<Member> selectMemberList(SqlSessionTemplate sqlSession, PageInfo pi) {
 	
         int limit = pi.getBoardLimit();
         int offset = (pi.getCurrentPage() - 1) * limit;
         
         RowBounds rowBounds = new RowBounds(offset, limit);
         
 		return sqlSession.selectList("adminMapper.selectMemberList", null, rowBounds); 
 	}
 	
    // 🚩 [수정/통일] 3. 검색 조건에 맞는 회원 수 조회 (에러 발생 쿼리 ID)
    public int selectSearchListCount(SqlSessionTemplate sqlSession, Map<String, String> searchMap) {
        // adminMapper.selectSearchListCount 쿼리 호출 (XML과 일치)
        return sqlSession.selectOne("adminMapper.selectSearchListCount", searchMap);
    }

    // 🚩 [수정/통일] 4. 검색 조건에 맞는 페이징 처리된 목록 조회
    public List<Member> selectSearchMemberList(SqlSessionTemplate sqlSession, PageInfo pi, Map<String, String> searchMap) {
        
        int limit = pi.getBoardLimit();
        int offset = (pi.getCurrentPage() - 1) * limit;

        RowBounds rowBounds = new RowBounds(offset, limit);

        // adminMapper.selectSearchMemberList 쿼리 호출 (XML과 일치)
        return sqlSession.selectList("adminMapper.selectSearchMemberList", searchMap, rowBounds);
    }
 	
    // 💡 5. 단일 회원 탈퇴
	public int deleteMemberAdmin(SqlSessionTemplate sqlSession, String memberId) {
		return sqlSession.update("adminMapper.deleteMemberAdmin", memberId);
	}
	
    // 💡 6. 일괄 회원 탈퇴
	public int deleteCheckMember(SqlSessionTemplate sqlSession, List<Integer> memberNoList) {
		return sqlSession.update("adminMapper.deleteCheckMember", memberNoList);
	}
	
    // 💡 7. 회원 상세조회
	public Member selectMemberDetail(SqlSessionTemplate sqlSession, int memberNo) {
		return sqlSession.selectOne("adminMapper.selectMemberDetail", memberNo);
    }
    
    // 🚩 [KPI 추가] 8. 총 회원 수
    public int selectTotalMemberCount(SqlSessionTemplate sqlSession) {
        return sqlSession.selectOne("adminMapper.selectTotalMemberCount");
    }
    
    // 🚩 [KPI 추가] 9. 신규 회원 수
    public int selectTodayNewMemberCount(SqlSessionTemplate sqlSession) {
        return sqlSession.selectOne("adminMapper.selectTodayNewMemberCount");
    }
    
    // 🚩 [KPI 추가] 10. 총 게시글 수
    public int selectTotalPostCount(SqlSessionTemplate sqlSession) {
        return sqlSession.selectOne("adminMapper.selectTotalPostCount");
    }
}