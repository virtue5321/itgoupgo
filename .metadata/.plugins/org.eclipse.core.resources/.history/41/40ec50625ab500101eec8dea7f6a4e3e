<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="jakarta.tags.core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <title>게시글 관리</title>
  <%-- 💡 CSS 파일 경로 확인 (memberManage.jsp와 동일한 경로 사용) --%>
  <link rel="stylesheet" href="<c:url value="/resources/css/adminStyle.css" />">
  <style>
    /* 💡 [추가] 페이징바 스타일: UI를 깔끔하게 유지하기 위한 필수 스타일 */
    .pagination-container {
        display: flex;
        justify-content: center;
        padding: 20px 0;
        gap: 5px;
    }
    .pagination-container a, .pagination-container span {
        padding: 8px 12px;
        text-decoration: none;
        color: #333;
        border: 1px solid #ddd;
        border-radius: 4px;
        transition: background-color 0.3s;
    }
    .pagination-container a:hover {
        background-color: #f0f0f0;
    }
    .pagination-container .active {
        background-color: #5a5ce8; /* 사용자님의 기존 버튼 색상 */
        color: white;
        border: 1px solid #5a5ce8;
        font-weight: bold;
    }
    .list-table thead th:nth-child(5) { 
        width: 30%; /* 제목 컬럼 너비 확보 */
        text-align: left;
        padding-left: 15px;
    }
    .list-table tbody td:nth-child(5) { 
        text-align: left;
        padding-left: 15px;
    }
  </style>
</head>
<body>

  <%-- 💡 전체 페이지 래퍼 --%>
  <div class="wrap">
    <%-- 💡 관리자 페이지 사이드바/헤더 등이 포함되는 영역 (여기서는 생략) --%>
    
    <div class="content">
      <h1>게시글 관리</h1>

      <%-- 1. 게시글 검색 영역 --%>
      <div class="search-area">
        <form action="<c:url value="/admin/postManage" />" method="get" id="searchForm">
          <%-- 검색 기준 --%>
          <select name="searchType" id="searchType">
            <option value="title">제목</option>
            <option value="content">내용</option>
            <option value="author">작성자</option>
            <option value="boardType">게시판 종류</option>
          </select>
          
          <%-- 검색어 입력 --%>
          <input type="text" name="keyword" placeholder="검색어를 입력하세요" value="${param.keyword}">
          
          <%-- 검색 버튼 --%>
          <button type="submit" class="btn search-btn">검색</button>
        </form>
      </div>

      <%-- 2. 전체 게시글 정보 및 일괄 삭제 버튼 영역 --%>
      <div class="top-info-area">
        <p>
          총 게시글 수: 
          <%-- PageInfo 객체의 listCount 값을 사용한다고 가정 --%>
          <strong><c:out value="${pi.listCount}" default="0"/></strong> 건
        </p>
        
        <%-- 일괄 삭제 버튼 --%>
        <button type="button" class="btn delete-btn" onclick="deletePost('<c:url value="/admin/deletePost" />');">
          <i class="fas fa-trash-alt"></i> 선택 게시글 삭제
        </button>
      </div>

      <%-- 3. 데이터 표시 테이블 --%>
      <table class="list-table">
        <thead>
          <tr>
            <th>
              <input type="checkbox" id="selectAllCheckboxPost">
            </th>
            <th>번호</th>
            <th>게시글 번호</th>
            <th>게시판 종류</th>
            <th>제목</th>
            <th>작성자</th>
            <th>작성일</th>
            <th>조회수</th>
            <th>상태</th>
          </tr>
        </thead>
        <tbody>
          <%-- 게시글 목록이 있을 경우 --%>
          <c:choose>
            <c:when test="${not empty postList}">
              <%-- postList를 순회하며 데이터 출력 (게시글 번호는 내림차순으로 가정) --%>
              <c:forEach var="post" items="${postList}" varStatus="status">
                <tr>
                  <td>
                    <%-- 게시글 번호를 value로 사용 --%>
                    <input type="checkbox" class="itemCheckboxPost" name="postNo" value="${post.postNo}">
                  </td>
                  <%-- 목록의 순서 번호 (listCount - offset - index) --%>
                  <td><c:out value="${pi.listCount - pi.startList - status.index}" /></td>
                  <%-- 게시글 번호 --%>
                  <td><c:out value="${post.postNo}" /></td>
                  
                  <%-- 💡 게시판 종류 표시 (Controller에서 post 객체에 boardType 필드를 추가했다고 가정) --%>
                  <td><c:out value="${post.boardType}" default="자유"/></td>
                  
                  <%-- 제목 (클릭 시 상세 페이지로 이동) --%>
                  <td>
                    <a href="<c:url value="/bbs/detail/${post.postNo}" />"><c:out value="${post.postTitle}" /></a>
                  </td>
                  
                  <%-- 작성자 ID (memberId가 post 객체에 포함되어 있다고 가정) --%>
                  <td><c:out value="${post.memberId}" default="탈퇴회원"/></td>
                  
                  <%-- 작성일 (날짜 포맷 적용) --%>
                  <td><fmt:formatDate value="${post.postCreateDate}" pattern="yyyy.MM.dd"/></td>
                  
                  <%-- 조회수 --%>
                  <td><c:out value="${post.postView}" default="0"/></td>
                  
                  <%-- 상태 (postDeleteStatus가 'Y'면 삭제됨, 'N'이면 정상으로 가정) --%>
                  <td>
                    <c:choose>
                      <c:when test="${post.postDeleteStatus eq 'Y'}">
                        <span style="color: red; font-weight: bold;">[삭제됨]</span>
                      </c:when>
                      <c:otherwise>
                        <span style="color: green;">정상</span>
                      </c:otherwise>
                    </c:choose>
                  </td>
                </tr>
              </c:forEach>
            </c:when>
            
            <%-- 게시글 목록이 없을 경우 --%>
            <c:otherwise>
              <tr>
                <td colspan="9" style="text-align: center; padding: 20px;">
                  검색된 게시글이 없습니다.
                </td>
              </tr>
            </c:otherwise>
          </c:choose>
        </tbody>
      </table>

      <%-- 4. 일괄 삭제 처리를 위한 숨겨진 폼 (memberManage.jsp와 동일한 구조) --%>
      <form action="" method="post" id="deleteFormPost" style="display: none;">
        <%-- Controller에서 postNoList라는 이름으로 List<Integer>를 받을 예정이라고 가정 --%>
      </form>

      <%-- 5. 페이징바 영역 (PageInfo 객체의 값을 사용한다고 가정) --%>
      <div class="pagination-container">
        
        <%-- 맨 처음으로 (1페이지로 이동) --%>
        <c:choose>
          <c:when test="${pi.currentPage eq 1}">
            <span>&lt;&lt;</span>
          </c:when>
          <c:otherwise>
            <a href="<c:url value="/admin/postManage" />?currentPage=1&searchType=${param.searchType}&keyword=${param.keyword}">&lt;&lt;</a>
          </c:otherwise>
        </c:choose>

        <%-- 이전 페이지로 (startPage - 1) --%>
        <c:choose>
          <c:when test="${pi.currentPage eq 1}">
            <span>&lt;</span>
          </c:when>
          <c:otherwise>
            <a href="<c:url value="/admin/postManage" />?currentPage=${pi.currentPage - 1}&searchType=${param.searchType}&keyword=${param.keyword}">&lt;</a>
          </c:otherwise>
        </c:choose>

        <%-- 페이지 번호 목록 --%>
        <c:forEach var="p" begin="${pi.startPage}" end="${pi.endPage}">
          <c:choose>
            <%-- 현재 페이지인 경우 --%>
            <c:when test="${p eq pi.currentPage}">
              <span class="active"><c:out value="${p}" /></span>
            </c:when>
            <%-- 다른 페이지인 경우 --%>
            <c:otherwise>
              <a href="<c:url value="/admin/postManage" />?currentPage=${p}&searchType=${param.searchType}&keyword=${param.keyword}"><c:out value="${p}" /></a>
            </c:otherwise>
          </c:choose>
        </c:forEach>
        
        <%-- 다음 페이지로 (endPage + 1 또는 maxPage) --%>
        <c:choose>
          <c:when test="${pi.currentPage eq pi.maxPage}">
            <span>&gt;</span>
          </c:when>
          <c:otherwise>
            <a href="<c:url value="/admin/postManage" />?currentPage=${pi.currentPage + 1}&searchType=${param.searchType}&keyword=${param.keyword}">&gt;</a>
          </c:otherwise>
        </c:choose>

        <%-- 맨 끝으로 (maxPage로 이동) --%>
        <c:choose>
          <c:when test="${pi.currentPage eq pi.maxPage}">
            <span>&gt;&gt;</span>
          </c:when>
          <c:otherwise>
            <a href="<c:url value="/admin/postManage" />?currentPage=${pi.maxPage}&searchType=${param.searchType}&keyword=${param.keyword}">&gt;&gt;</a>
          </c:otherwise>
        </c:choose>
      </div>

    </div> <%-- end of content --%>
  </div> <%-- end of wrap --%>

  <script>
    // 1. 게시글 일괄 삭제 기능 함수
    function deletePost(url) {
        const form = document.getElementById('deleteFormPost');
        const selectedCheckboxes = document.querySelectorAll('.itemCheckboxPost:checked');

        if (selectedCheckboxes.length === 0) {
            // 사용자 정의 모달 또는 메시지 박스를 사용해야 합니다.
            // window.alert("선택된 게시글이 없습니다."); 
            console.warn("선택된 게시글이 없습니다. (TODO: 사용자 정의 모달로 변경)");
            // 실제 구현에서는 사용자에게 보여줄 UI 로직이 필요
            alert("선택된 게시글이 없습니다."); 
            return;
        }

        // 실제 구현에서는 사용자 정의 모달 또는 메시지 박스를 사용해야 합니다.
        // if (!window.confirm(`선택된 게시글 ${selectedCheckboxes.length}개를 정말 삭제하시겠습니까?`)) { 
        //     return;
        // }
        // 임시로 console.log로 대체하거나, 실제 환경에서는 커스텀 모달 사용
        console.log(`선택된 게시글 ${selectedCheckboxes.length}개를 삭제 요청합니다.`);
        if (!confirm(`선택된 게시글 ${selectedCheckboxes.length}개를 정말 삭제하시겠습니까?`)) { 
             return;
        }

        form.action = url; // POST 요청 URL 설정
        
        // 이전에 추가된 hidden input이 있다면 제거
        while (form.firstChild) {
            form.removeChild(form.firstChild);
        }

        // 선택된 체크박스의 value를 hidden input으로 폼에 추가하여 전송
        selectedCheckboxes.forEach(checkbox => {
            const hiddenInput = document.createElement('input');
            hiddenInput.type = 'hidden';
            hiddenInput.name = 'postNoList'; // Controller의 @RequestParam 이름과 일치
            hiddenInput.value = checkbox.value;
            form.appendChild(hiddenInput);
        });
        
        form.submit(); // POST 요청 전송
    }

    // 2. 체크박스 전체 선택/해제 기능
    document.addEventListener('DOMContentLoaded', (event) => {
        const selectAllCheckbox = document.getElementById('selectAllCheckboxPost');
        const itemCheckboxes = document.querySelectorAll('.itemCheckboxPost');

        selectAllCheckbox.addEventListener('change', function() {
            itemCheckboxes.forEach(checkbox => {
                checkbox.checked = this.checked;
            });
        });
        
        itemCheckboxes.forEach(checkbox => {
            checkbox.addEventListener('change', () => {
                const checkedItems = document.querySelectorAll('.itemCheckboxPost:checked').length;
                if (!checkbox.checked) {
                    // 하나라도 해제되면 전체 선택 체크박스 해제
                    selectAllCheckbox.checked = false;
                } else if (checkedItems === itemCheckboxes.length) {
                    // 모든 개별 항목이 선택되면 전체 선택 체크박스 선택
                    selectAllCheckbox.checked = true;
                }
            });
        });
    });
 </script>
</body>
</html>
