<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="jakarta.tags.core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <title>게시글 관리</title>
  <%-- 💡 CSS 파일 경로 확인 --%>
  <link rel="stylesheet" href="<c:url value="/resources/css/adminStyle.css" />">
  <style>
    /* 💡 페이징바 스타일: member.jsp에서 가져옴 */
    .pagination-container {
        display: flex;
        justify-content: center;
        padding: 20px 0;
        gap: 5px;
    }
    .pagination-container a, .pagination-container span {
        padding: 8px 12px;
        text-decoration: none;
        color: #333;
        border: 1px solid #ddd;
        border-radius: 4px;
        transition: background-color 0.3s;
    }
    .pagination-container a:hover {
        background-color: #f0f0f0;
    }
    .pagination-container .active {
        background-color: #5a5ce8;
        color: white;
        border: 1px solid #5a5ce8;
    }
    .pagination-container .disabled {
        color: #ccc;
        pointer-events: none;
        background-color: #f9f9f9;
    }
    /* 테이블 버튼 스타일 */
    .btn-delete {
        background-color: #dc3545;
        color: white;
        border: none;
        padding: 5px 10px;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.2s;
        font-size: 13px;
    }
    .btn-delete:hover {
        background-color: #c82333;
    }
  </style>
</head>
<body>
  <header>
    <div class="logo">
      <img src="<c:url value="/resources/images/logo1.PNG" />" width="80">
      관리자 페이지
    </div>
  </header>

  <div class="layout">
    <aside class="sidebar">
      <ul>
        <li><a href="<c:url value="/admin/dashboard" />">🏠 대시보드</a></li>
        <li><a href="<c:url value="/admin/member" />">👥 회원 관리</a></li>
        <%-- 현재 페이지 활성화 --%>
        <li><a href="<c:url value="/admin/post" />" class="active">📝 게시글 관리</a></li>
        <li><a href="<c:url value="/admin/reply" />">💬 댓글 관리</a></li>
        <li><a href="<c:url value="/admin/stats" />">📊 통계</a></li>
        <li><a href="<c:url value="/admin/logout" />">🚪 로그아웃</a></li>
      </ul>
    </aside>

    <main>
      <h1>📝 게시글 관리</h1>
      <p>커뮤니티에 등록된 모든 게시글을 통합하여 확인하고 관리할 수 있습니다.</p>

      <%-- 검색 폼 --%>
      <%-- Controller에서 searchPostCondition, searchKeyword를 사용한다고 가정 --%>
      <form class="search-form" id="searchForm" 
            action="<c:url value="/admin/searchPost" />" method="get" 
            style="margin-bottom: 20px; display:flex; gap:10px; align-items:center; background:#fff; padding:15px; border-radius:10px; box-shadow:0 2px 5px rgba(0,0,0,0.05);">
        
        <select name="searchCondition" id="searchCondition"
                style="padding: 8px; border: 1px solid #ccc; border-radius: 4px;">
          <option value="searchPostTitle" ${searchCondition eq 'searchPostTitle' ? 'selected' : ''}>제목</option>
          <option value="searchPostWriterId" ${searchCondition eq 'searchPostWriterId' ? 'selected' : ''}>작성자(ID)</option>
        </select>
        
        <input type="text" name="keyword"
               value="${searchKeyword}" 
               placeholder="검색어를 입력하세요" style="flex-grow: 1; padding: 8px; border: 1px solid #ccc; border-radius: 4px;">
        
        <button type="submit" style="background:#5a5ce8; color:white; border:none; padding:8px 15px; border-radius:4px; cursor:pointer;">검색</button>
      </form>
      
      <%-- 일괄 삭제 폼 (POST 요청을 위해 필요) --%>
      <form id="bulkDeleteForm" action="<c:url value="/admin/deleteCheckPost" />" method="post" style="display:none;"></form>

      <div style="display:flex; justify-content:flex-end; align-items:center; margin-bottom:10px;">
          <%-- 일괄 삭제 버튼, JS 함수 호출 --%>
          <button class="btn btn-danger" onclick="confirmBulkDelete()">
            선택 항목 일괄 삭제
          </button>
      </div>

      <table>
        <thead>
          <tr>
            <th><input type="checkbox" id="selectAllCheckboxPost"></th> 
            <th>게시글 번호</th>
            <th>게시판 구분</th>
            <th>제목</th>
            <th>작성자(ID)</th>
            <th>작성일</th>
            <th>조회수</th>
            <th>관리</th>
          </tr>
        
        </thead>
        <tbody>
          <c:choose>
            <c:when test="${empty postList}">
              <tr>
                <td colspan="8">
                    <c:if test="${not empty searchKeyword}">
                        "${searchKeyword}"에 대한 검색 결과가 없습니다.
                    </c:if>
                    <c:if test="${empty searchKeyword}">
                        등록된 게시글 정보가 없습니다.
                    </c:if>
                </td>
              </tr>
            </c:when>
            <c:otherwise>
              <%-- postList는 AdminPostVO (postNo, category, title, writerId, createDate, view, deleteStatus) 라고 가정 --%>
              <c:forEach var="post" items="${postList}">
                <tr>
                  <%-- 일괄 삭제를 위한 체크박스 --%>
                  <td><input type="checkbox" class="itemCheckboxPost" name="postNoList" value="${post.postNo}_${post.postCategory}"></td>
                  <td>${post.postNo}</td>
                  
                  <%-- 게시판 구분 (Category Code -> Display Name) --%>
                  <td>
                    <c:choose>
                        <c:when test="${post.postCategory eq 'FREE'}">자유게시판</c:when>
                        <c:when test="${post.postCategory eq 'INFO'}">정보공유</c:when>
                        <c:when test="${post.postCategory eq 'KNOWLEDGE'}">지식공유</c:when>
                        <c:when test="${post.postCategory eq 'IT'}">IT뉴스</c:when>
                        <c:when test="${post.postCategory eq 'NOTICE'}">공지사항</c:when>
                        <c:otherwise>-</c:otherwise>
                    </c:choose>
                  </td>

                  <%-- 게시글 상세 보기 링크 (제목 클릭) --%>
                  <td>
                    <%-- 실제 게시판 URL로 연결하는 것이 일반적입니다. 예: /free/detail?no=123 --%>
                    <a href="<c:url value="/${post.postCategory}/detail?no=${post.postNo}" />" 
                      style="text-decoration: underline; color: #5a5ce8;" target="_blank">
                        ${post.postTitle}
                    </a>
                  </td>
          
                  <td>${post.writerId}</td> <%-- 작성자 ID 필드를 post 객체에 포함한다고 가정 --%>
                  <td><fmt:formatDate value="${post.postCreateDate}" pattern="yyyy-MM-dd" /></td>
                  <td>${post.postView}</td>
                  <td>
                    <c:choose>
                      <c:when test="${post.postDeleteStatus eq 'N'}">
                        <%-- 단일 삭제 버튼 (Controller에서 postNo와 category를 모두 처리해야 함) --%>
                        <button class="btn-delete"
                                onclick="if(confirm('${post.postTitle} 게시글을 정말 삭제하시겠습니까?')) { 
                                    location.href='<c:url value="/admin/deletePost?postNo=${post.postNo}&category=${post.postCategory}" />'; 
                                }">
                          단일 삭제
                        </button>
                      </c:when>
                      <c:otherwise>
                        <span style="color: gray; font-size:13px;">삭제됨</span>
                      </c:otherwise>
                    </c:choose>
                  </td>
                </tr>
              </c:forEach>
            </c:otherwise>
          </c:choose>
        </tbody>
      </table>

      <%-- 페이징바 동적 출력 로직 (검색 결과 연동) --%>
      <div class="pagination-container">
        
        <%-- 검색 중일 때와 아닐 때, URL 경로를 결정 --%>
        <c:choose>
            <c:when test="${not empty searchKeyword}">
                <%-- 검색 결과 페이징: URL은 /admin/searchPost --%>
                <c:set var="pageLinkUrl" value="/admin/searchPost" />
                <c:set var="searchQueryParam" value="&keyword=${searchKeyword}&searchCondition=${searchCondition}" />
            </c:when>
            <c:otherwise>
                <%-- 일반 목록 페이징: URL은 /admin/post --%>
                <c:set var="pageLinkUrl" value="/admin/post" />
                <c:set var="searchQueryParam" value="" />
            </c:otherwise>
        </c:choose>

        <%-- Controller에서 'pageInfo'라는 이름으로 Pagination 객체를 전달했다고 가정 --%>
        <c:set var="pi" value="${pageInfo}" />

        <%-- 1. 맨 처음으로 (<<) --%>
        <c:choose>
            <c:when test="${pi.currentPage le 1}">
                <span class="disabled">&lt;&lt;</span>
            </c:when>
            <c:otherwise>
                <a href="<c:url value="${pageLinkUrl}" />?currentPage=1${searchQueryParam}">&lt;&lt;</a>
            </c:otherwise>
        </c:choose>

        <%-- 2. 이전 페이지 그룹으로 (<) --%>
        <c:choose>
            <c:when test="${pi.currentPage le 1}">
                <span class="disabled">&lt;</span>
            </c:when>
            <c:otherwise>
                <a href="<c:url value="${pageLinkUrl}" />?currentPage=${pi.currentPage - 1}${searchQueryParam}">&lt;</a>
            </c:otherwise>
        </c:choose>

        <%-- 3. 페이지 번호 --%>
        <c:forEach begin="${pi.startPage}" end="${pi.endPage}" var="p">
            <c:choose>
                <c:when test="${pi.currentPage eq p}">
                    <span class="active">${p}</span>
                </c:when>
                <c:otherwise>
                    <a href="<c:url value="${pageLinkUrl}" />?currentPage=${p}${searchQueryParam}">${p}</a>
                </c:otherwise>
            </c:choose>
        </c:forEach>

        <%-- 4. 다음 페이지 그룹으로 (>) --%>
        <c:choose>
            <c:when test="${pi.currentPage eq pi.maxPage || pi.maxPage eq 0}">
                <span class="disabled">&gt;</span>
            </c:when>
            <c:otherwise>
                <a href="<c:url value="${pageLinkUrl}" />?currentPage=${pi.currentPage + 1}${searchQueryParam}">&gt;</a>
            </c:otherwise>
        </c:choose>

        <%-- 5. 맨 끝으로 (>>) --%>
        <c:choose>
            <c:when test="${pi.currentPage eq pi.maxPage || pi.maxPage eq 0}">
                <span class="disabled">&gt;&gt;</span>
            </c:when>
            <c:otherwise>
                <a href="<c:url value="${pageLinkUrl}" />?currentPage=${pi.maxPage}${searchQueryParam}">&gt;&gt;</a>
            </c:otherwise>
        </c:choose>
      </div>
    </main>
  </div>

  <footer>ⓒ 2025 IT GO UP GO. All Rights Reserved.</footer>

<script>
    // 1. 검색 폼 액션 변경 로직 (게시글 관리에서는 하나의 검색 엔드포인트(/admin/searchPost)를 사용한다고 가정)
    document.getElementById('searchForm').addEventListener('submit', function(e) {
        const form = e.target;
        // 검색 조건과 키워드를 포함하여 /admin/searchPost로 전송
        form.action = `<c:url value="/admin/searchPost" />`;
    });

    // 2. 일괄 삭제 로직 (confirmBulkDelete 함수)
    function confirmBulkDelete() {
        // .itemCheckboxPost 클래스를 사용합니다.
        const selectedCheckboxes = document.querySelectorAll('.itemCheckboxPost:checked');

        if (selectedCheckboxes.length === 0) {
            alert('일괄 삭제할 게시글을 1개 이상 선택해 주세요.');
            return;
        }

        if (confirm(`총 ${selectedCheckboxes.length}개의 게시글을 일괄 삭제 처리하시겠습니까?`)) {
            const form = document.getElementById('bulkDeleteForm');
            
            // 이전 전송 시도에서 추가된 필드가 있다면 모두 제거
            form.innerHTML = ''; 

            // 선택된 체크박스의 value를 hidden input으로 폼에 추가하여 전송
            // value 형식은 "게시글번호_카테고리" (예: "123_FREE")를 사용한다고 가정
            selectedCheckboxes.forEach(checkbox => {
                const hiddenInput = document.createElement('input');
                hiddenInput.type = 'hidden';
                hiddenInput.name = 'postInfoList'; // Controller의 @RequestParam 이름과 일치
                hiddenInput.value = checkbox.value; // ex: 123_FREE
                form.appendChild(hiddenInput);
            });
            
            form.submit(); // POST 요청 전송
        }
    }

    // 3. 체크박스 전체 선택/해제 기능
    document.addEventListener('DOMContentLoaded', (event) => {
        // ID 및 클래스 이름을 member -> post로 변경
        const selectAllCheckbox = document.getElementById('selectAllCheckboxPost');
        const itemCheckboxes = document.querySelectorAll('.itemCheckboxPost');

        selectAllCheckbox.addEventListener('change', function() {
            itemCheckboxes.forEach(checkbox => {
                checkbox.checked = this.checked;
            });
        });
        
        itemCheckboxes.forEach(checkbox => {
            checkbox.addEventListener('change', () => {
                const checkedItems = document.querySelectorAll('.itemCheckboxPost:checked').length;
                if (!checkbox.checked) {
                    selectAllCheckbox.checked = false;
                } else if (checkedItems === itemCheckboxes.length && itemCheckboxes.length > 0) {
                    selectAllCheckbox.checked = true;
                }
            });
        });
    });
 </script>
</body>
</html>
