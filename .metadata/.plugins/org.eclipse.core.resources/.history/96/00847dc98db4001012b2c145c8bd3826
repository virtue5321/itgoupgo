package com.itgoupgo.community.admin.model.dao;

import java.util.List;

import org.mybatis.spring.SqlSessionTemplate;
import org.springframework.stereotype.Repository;

import com.itgoupgo.community.member.model.vo.Member;

@Repository
public class AdminDao {
	
	public List<Member> selectMemberList(SqlSessionTemplate sqlSession) {
		
		return sqlSession.selectList("adminMapper.selectMemberList");
	}
	
	public int deleteMemberAdmin(SqlSessionTemplate sqlSession, String memberId) {
		
		return sqlSession.update("adminMapper.deleteMemberAdmin", memberId);
	}
	
	public int deleteCheckMember(SqlSessionTemplate sqlSession, List<Integer> memberNoList) {
		
		return sqlSession.update("adminMapper.deleteCheckMember", memberNoList);
	}
	
	public List<Member> searchMemberByName(SqlSessionTemplate sqlSession, String memberName) {
		
		return sqlSession.selectList("adminMapper.searchMemberByName", memberName);
	}
	
	public Member searchMemberById(SqlSessionTemplate sqlSession, String memberId) {
		
		return sqlSession.selectOne("adminMapper.searchMemberById", memberId);
	}
	
	public Member selectMemberDetail(SqlSessionTemplate sqlSession, int memberNo) {

		return sqlSession.selectOne("adminMapper.selectMemberDetail", memberNo);
    }
	
	// 1. 전체 회원 수 조회 (페이징 처리를 위한 목록 총 갯수 조회)
    public int selectListCount(SqlSessionTemplate sqlSession) {
        // adminMapper.xml의 selectListCount 쿼리 실행
        return sqlSession.selectOne("adminMapper.selectListCount");
    }
    
 // 2. 페이징 처리된 회원 목록 조회
 	public List<Member> selectMemberList(SqlSessionTemplate sqlSession, PageInfo pi) {
 		
         // RowBounds를 이용해 offset(건너뛸 갯수)과 limit(조회할 갯수) 계산
         int limit = pi.getBoardLimit(); // 한 페이지에 보여줄 회원 수
         // (현재 페이지 - 1) * limit = 앞에서부터 건너뛸 회원 수
         int offset = (pi.getCurrentPage() - 1) * limit; 
         
         RowBounds rowBounds = new RowBounds(offset, limit);
         
         // selectList의 오버로딩된 형태 (쿼리, 파라미터(null), RowBounds)를 사용하여 페이징 처리
 		return sqlSession.selectList("adminMapper.selectMemberList", null, rowBounds);
 	}
	
}
