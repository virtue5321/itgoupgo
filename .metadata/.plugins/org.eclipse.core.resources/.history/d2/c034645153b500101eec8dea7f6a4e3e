package com.itgoupgo.community.knowledge.model.dao;

import java.util.List;

import org.apache.ibatis.session.RowBounds;
import org.mybatis.spring.SqlSessionTemplate;
import org.springframework.stereotype.Repository;

import com.itgoupgo.community.knowledge.model.vo.KnowledgeBbs;

/**
 * 지식공유 게시판 Data Access Object (DAO)
 * MyBatis를 이용해 DB에 직접 접근하여 CRUD 작업을 수행합니다.
 */
@Repository
public class KnowledgeDao {

	/**
	 * 전체 게시글 개수 조회 (페이징용)
	 * @param sqlSession MyBatis 쿼리 실행 객체
	 * @return 전체 게시글 수
	 */
	public int selectListCount(SqlSessionTemplate sqlSession) {
		// id="knowledgeMapper.selectListCount"에 해당하는 쿼리 실행
		return sqlSession.selectOne("knowledgeMapper.selectListCount");
	}

	/**
	 * 게시글 목록 조회 (페이징 적용)
	 * @param sqlSession MyBatis 쿼리 실행 객체
	 * @param rowBounds 페이징 정보 (offset, limit)
	 * @return 게시글 목록
	 */
	public List<KnowledgeBbs> selectList(SqlSessionTemplate sqlSession, RowBounds rowBounds) {
		// id="knowledgeMapper.selectList"에 해당하는 쿼리 실행
		return sqlSession.selectList("knowledgeMapper.selectList", null, rowBounds);
	}
	
	/**
	 * 게시글 조회수 증가
	 * @param sqlSession MyBatis 쿼리 실행 객체
	 * @param knowledgeNo 조회할 게시글 번호
	 * @return 처리된 행의 수
	 */
	public int increaseKnowledgeBbsCount(SqlSessionTemplate sqlSession, int knowledgeNo) {
		// id="knowledgeMapper.increaseKnowledgeBbsCount"에 해당하는 쿼리 실행
		return sqlSession.update("knowledgeMapper.increaseKnowledgeBbsCount", knowledgeNo);
	}
	
	/**
	 * 게시글 상세 조회
	 * @param sqlSession MyBatis 쿼리 실행 객체
	 * @param knowledgeNo 조회할 게시글 번호
	 * @return 조회된 KnowledgeBbs 객체
	 */
	public KnowledgeBbs selectKnowledgeBbs(SqlSessionTemplate sqlSession, int knowledgeNo) {
		// id="knowledgeMapper.selectKnowledgeBbs"에 해당하는 쿼리 실행
		return sqlSession.selectOne("knowledgeMapper.selectKnowledgeBbs", knowledgeNo);
	}

	/**
	 * 새로운 게시글 등록
	 * @param sqlSession MyBatis 쿼리 실행 객체
	 * @param f 등록할 KnowledgeBbs 객체
	 * @return 처리된 행의 수
	 */
	public int insertKnowledgeBbs(SqlSessionTemplate sqlSession, KnowledgeBbs f) {
		// id="knowledgeMapper.insertKnowledgeBbs"에 해당하는 쿼리 실행
		return sqlSession.insert("knowledgeMapper.insertKnowledgeBbs", f);
	}
	
	/**
	 * 게시글 삭제 (DELETE_STATUS 업데이트)
	 * @param sqlSession MyBatis 쿼리 실행 객체
	 * @param knowledgeNo 삭제할 게시글 번호
	 * @return 처리된 행의 수
	 */
	public int deleteKnowledgeBbs(SqlSessionTemplate sqlSession, int knowledgeNo) {
		// id="knowledgeMapper.deleteKnowledgeBbs"에 해당하는 쿼리 실행
		return sqlSession.update("knowledgeMapper.deleteKnowledgeBbs", knowledgeNo);
	}
}
