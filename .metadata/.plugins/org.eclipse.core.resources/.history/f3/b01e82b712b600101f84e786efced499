package com.itgoupgo.community.study.model.dao;

import java.util.List;

import org.apache.ibatis.session.RowBounds;
import org.mybatis.spring.SqlSessionTemplate;
import org.springframework.stereotype.Repository;

import com.itgoupgo.community.study.model.vo.StudyBbs;

/**
 * 스터디모집 게시판 Data Access Object (DAO)
 * MyBatis를 이용해 DB에 직접 접근하여 CRUD 작업을 수행합니다.
 */
@Repository
public class StudyDao {

	/**
	 * 전체 게시글 개수 조회 (페이징용)
	 * @param sqlSession MyBatis 쿼리 실행 객체
	 * @return 전체 게시글 수
	 */
	public int selectListCount(SqlSessionTemplate sqlSession) {
		// id="studyMapper.selectListCount"에 해당하는 쿼리 실행
		return sqlSession.selectOne("studyMapper.selectListCount");
	}

	/**
	 * 게시글 목록 조회 (페이징 적용)
	 * @param sqlSession MyBatis 쿼리 실행 객체
	 * @param rowBounds 페이징 정보 (offset, limit)
	 * @return 게시글 목록
	 */
	public List<StudyBbs> selectList(SqlSessionTemplate sqlSession, RowBounds rowBounds) {
		// id="studyMapper.selectList"에 해당하는 쿼리 실행
		return sqlSession.selectList("studyMapper.selectList", null, rowBounds);
	}
	
	/**
	 * 게시글 조회수 증가
	 * @param sqlSession MyBatis 쿼리 실행 객체
	 * @param studyNo 조회할 게시글 번호
	 * @return 처리된 행의 수
	 */
	public int increaseStudyBbsCount(SqlSessionTemplate sqlSession, int studyNo) {
		// id="studyMapper.increaseStudyBbsCount"에 해당하는 쿼리 실행
		return sqlSession.update("studyMapper.increaseStudyBbsCount", studyNo);
	}
	
	/**
	 * 게시글 상세 조회
	 * @param sqlSession MyBatis 쿼리 실행 객체
	 * @param studyNo 조회할 게시글 번호
	 * @return 조회된 StudyBbs 객체
	 */
	public StudyBbs selectStudyBbs(SqlSessionTemplate sqlSession, int studyNo) {
		// id="studyMapper.selectStudyBbs"에 해당하는 쿼리 실행
		return sqlSession.selectOne("studyMapper.selectStudyBbs", studyNo);
	}

	/**
	 * 새로운 게시글 등록
	 * @param sqlSession MyBatis 쿼리 실행 객체
	 * @param f 등록할 StudyBbs 객체
	 * @return 처리된 행의 수
	 */
	public int insertStudyBbs(SqlSessionTemplate sqlSession, StudyBbs f) {
		// id="studyMapper.insertStudyBbs"에 해당하는 쿼리 실행
		return sqlSession.insert("studyMapper.insertStudyBbs", f);
	}
	
	/**
	 * 게시글 삭제 (DELETE_STATUS 업데이트)
	 * @param sqlSession MyBatis 쿼리 실행 객체
	 * @param studyNo 삭제할 게시글 번호
	 * @return 처리된 행의 수
	 */
	public int deleteStudyBbs(SqlSessionTemplate sqlSession, int studyNo) {
		// id="studyMapper.deleteStudyBbs"에 해당하는 쿼리 실행
		return sqlSession.update("adminMapper.deleteStudyBbs", studyNo);
	}
	
	public int deleteStudyBbsCheck(SqlSessionTemplate sqlSession, List<Integer> bbsNoList) {
        // 상태값만 변경하는 UPDATE 쿼리를 호출하는 것이 일반적
        return sqlSession.update("adminMapper.deleteStudyBbsCheck", bbsNoList);
    }
}
