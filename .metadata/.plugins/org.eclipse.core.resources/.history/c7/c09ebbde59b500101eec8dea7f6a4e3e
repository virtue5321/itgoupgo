<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="jakarta.tags.core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <title>게시글 관리</title>
    <%-- 💡 CSS 파일 경로 확인 --%>
    <link rel="stylesheet" href="<c:url value="/resources/css/adminStyle.css" />">
    <style>
        /* memberManage.jsp에서 복사된 스타일을 최대한 유지합니다. */
        .pagination-container {
            display: flex;
            justify-content: center;
            padding: 20px 0;
            gap: 5px;
        }
        .pagination-container a, .pagination-container span {
            padding: 8px 12px;
            text-decoration: none;
            color: #333;
            border: 1px solid #ddd;
            border-radius: 4px;
            transition: background-color 0.3s;
        }
        .pagination-container a:hover {
            background-color: #f0f0f0;
        }
        .pagination-container .active {
            background-color: #5a5ce8; /* 원본에서 사용된 색상으로 추정 */
            color: white;
            border-color: #5a5ce8;
        }
        
        /* 상태 표시 색상 */
        .status-active { color: #28a745; font-weight: 500; } /* 정상 */
        .status-deleted { color: #dc3545; font-weight: 500; } /* 삭제됨 */
        
        /* 테이블 호버 효과 (원본 memberManage.jsp 코드 기반) */
        .table tbody tr:hover {
            background-color: #f7f7f7;
            cursor: pointer;
        }
        .no-data {
            text-align: center;
            padding: 20px;
            color: #777;
        }
    </style>
</head>
<body>

    <div class="wrap">
        
        <%-- 💡 헤더 및 사이드바는 별도로 include 한다고 가정합니다. --%>
        <%-- <c:import url="../common/adminHeader.jsp" /> --%>
        <%-- <c:import url="../common/adminSidebar.jsp" /> --%>

        <div class="content">
            <h2 class="page-title">게시글 관리</h2>

            <div class="search-area">
                <form action="${pageContext.request.contextPath}/admin/posts/list" method="get">
                    <select name="searchType" class="search-select">
                        <option value="title" <c:if test="${param.searchType eq 'title'}">selected</c:if>>제목</option>
                        <option value="memberNo" <c:if test="${param.searchType eq 'memberNo'}">selected</c:if>>작성자 No</option>
                        <option value="boardType" <c:if test="${param.searchType eq 'boardType'}">selected</c:if>>게시판 종류</option>
                    </select>
                    <input type="text" name="searchKeyword" placeholder="검색어를 입력하세요" class="search-input" value="${param.searchKeyword}">
                    <button type="submit" class="search-btn">검색</button>
                </form>
            </div>

            <div class="board-top">
                <div class="count-text">
                    총 게시글 수: <strong><c:out value="${pageInfo.listCount}" default="0"/></strong>건
                </div>
                <div class="action-buttons">
                    <%-- memberManage.jsp의 버튼 클래스(btn-warning, btn-success)를 그대로 사용합니다. --%>
                    <button type="button" class="btn btn-warning" onclick="confirmPostAction('DELETE');">
                        선택 게시글 삭제 (상태 N)
                    </button>
                    <button type="button" class="btn btn-success" onclick="confirmPostAction('RESTORE');">
                        선택 게시글 복구 (상태 Y)
                    </button>
                </div>
            </div>

            <%-- 💡 게시글 상태 변경을 위한 폼 (POST 요청) --%>
            <form id="postActionForm" action="${pageContext.request.contextPath}/admin/posts/updateStatus" method="POST">
                
                <table class="table">
                    <thead>
                        <tr>
                            <th style="width: 50px;">
                                <input type="checkbox" id="selectAllCheckboxPost">
                            </th>
                            <th style="width: 50px;">No.</th>
                            <th style="width: 80px;">게시판</th>
                            <th style="min-width: 250px;">제목</th>
                            <th style="width: 100px;">작성자 No</th>
                            <th style="width: 120px;">작성일</th>
                            <th style="width: 80px;">조회수</th>
                            <th style="width: 80px;">상태</th>
                        </tr>
                    </thead>
                    <tbody>
                        <%-- postList는 컨트롤러에서 전달받은 게시글 목록입니다. --%>
                        <c:choose>
                            <c:when test="${not empty postList}">
                                <c:forEach var="post" items="${postList}">
                                    <tr onclick="location.href='<c:url value="/admin/posts/detail?no=${post.postNo}"/>';">
                                        <%-- 체크박스 클릭 시 TR의 onclick 이벤트가 실행되지 않도록 이벤트 버블링을 막습니다. --%>
                                        <td onclick="event.stopPropagation();"> 
                                            <input type="checkbox" class="itemCheckboxPost" value="${post.postNo}">
                                        </td>
                                        <td><c:out value="${post.postNo}" /></td>
                                        <td><c:out value="${post.boardType}" /></td> <%-- 예시: FREE, INFO, NOTICE, STUDY, IT --%>
                                        <td><c:out value="${post.postTitle}" /></td>
                                        <td><c:out value="${post.memberNo}" /></td>
                                        <td>
                                            <fmt:formatDate value="${post.postCreateDate}" pattern="yyyy-MM-dd" />
                                        </td>
                                        <td><c:out value="${post.postView}" /></td>
                                        <td>
                                            <c:choose>
                                                <c:when test="${post.postDeleteStatus eq 'N'}">
                                                    <span class="status-active">정상</span>
                                                </c:when>
                                                <c:otherwise>
                                                    <span class="status-deleted">삭제됨</span>
                                                </c:otherwise>
                                            </c:choose>
                                        </td>
                                    </tr>
                                </c:forEach>
                            </c:when>
                            <c:otherwise>
                                <tr>
                                    <td colspan="8" class="no-data">조회된 게시글이 없습니다.</td>
                                </tr>
                            </c:otherwise>
                        </c:choose>
                    </tbody>
                </table>

                <%-- 실제 상태 변경 작업을 위한 Hidden 필드 --%>
                <input type="hidden" name="actionType" id="actionType" value="">
                <%-- 선택된 게시글 번호 목록은 JavaScript에서 동적으로 추가됩니다 --%>
            </form>
            
            <%-- 💡 페이징 바 영역 --%>
            <div class="pagination-container">
                <%-- PageInfo 객체에 queryStr이 포함되어 있다고 가정합니다. --%>
                <c:set var="queryStr" value="searchType=${param.searchType}&searchKeyword=${param.searchKeyword}" />
                
                <%-- 이전 페이지 그룹 --%>
                <c:if test="${pageInfo.currentPage > pageInfo.pageLimit}">
                    <a href="${pageContext.request.contextPath}/admin/posts/list?currentPage=${pageInfo.startPage - 1}&${queryStr}">&laquo;</a>
                </c:if>

                <%-- 페이지 번호 목록 --%>
                <c:forEach var="p" begin="${pageInfo.startPage}" end="${pageInfo.endPage}">
                    <c:choose>
                        <c:when test="${p eq pageInfo.currentPage}">
                            <span class="active">${p}</span>
                        </c:when>
                        <c:otherwise>
                            <a href="${pageContext.request.contextPath}/admin/posts/list?currentPage=${p}&${queryStr}">${p}</a>
                        </c:otherwise>
                    </c:choose>
                </c:forEach>

                <%-- 다음 페이지 그룹 --%>
                <c:if test="${pageInfo.currentPage < pageInfo.maxPage and pageInfo.endPage < pageInfo.maxPage}">
                    <a href="${pageContext.request.contextPath}/admin/posts/list?currentPage=${pageInfo.endPage + 1}&${queryStr}">&raquo;</a>
                </c:if>
            </div>

        </div>
    </div>

    <script>
        // 1. 게시글 상태 변경 처리 함수
        function confirmPostAction(action) {
            const selectedCheckboxes = document.querySelectorAll('.itemCheckboxPost:checked');
            const form = document.getElementById('postActionForm');
            const actionTypeInput = document.getElementById('actionType');

            if (selectedCheckboxes.length === 0) {
                alert('먼저 처리할 게시글을 선택해주세요.');
                return;
            }

            let message = '';
            if (action === 'DELETE') {
                message = selectedCheckboxes.length + '개의 게시글을 정말로 삭제 처리(상태: N) 하시겠습니까?';
                actionTypeInput.value = 'N'; // 삭제 상태
            } else if (action === 'RESTORE') {
                message = selectedCheckboxes.length + '개의 게시글을 정말로 복구 처리(상태: Y) 하시겠습니까?';
                actionTypeInput.value = 'Y'; // 정상 상태
            } else {
                return;
            }

            if (confirm(message)) {
                // 기존에 추가된 postNoList를 모두 제거
                form.querySelectorAll('input[name="postNoList"]').forEach(input => input.remove());

                // 선택된 체크박스의 value를 hidden input으로 폼에 추가하여 전송
                selectedCheckboxes.forEach(checkbox => {
                    const hiddenInput = document.createElement('input');
                    hiddenInput.type = 'hidden';
                    hiddenInput.name = 'postNoList'; // Controller의 @RequestParam 이름과 일치
                    hiddenInput.value = checkbox.value;
                    form.appendChild(hiddenInput);
                });
                
                form.submit(); // POST 요청 전송
            }
        }

        // 2. 체크박스 전체 선택/해제 기능 (memberManage.jsp와 동일한 로직 사용)
        document.addEventListener('DOMContentLoaded', (event) => {
            const selectAllCheckbox = document.getElementById('selectAllCheckboxPost');
            const itemCheckboxes = document.querySelectorAll('.itemCheckboxPost');
            const tableBodyRows = document.querySelectorAll('.table tbody tr');

            // 1) 전체 선택 체크박스 클릭 시
            selectAllCheckbox.addEventListener('change', function() {
                itemCheckboxes.forEach(checkbox => {
                    checkbox.checked = this.checked;
                });
            });
            
            // 2) 개별 항목 체크박스 상태 변경 시
            itemCheckboxes.forEach(checkbox => {
                checkbox.addEventListener('change', (e) => {
                    const checkedItems = document.querySelectorAll('.itemCheckboxPost:checked').length;
                    if (!checkbox.checked) {
                        // 하나라도 해제되면 전체 선택 해제
                        selectAllCheckbox.checked = false;
                    } else if (checkedItems === itemCheckboxes.length) {
                        // 모든 항목이 선택되면 전체 선택
                        selectAllCheckbox.checked = true;
                    }
                });
            });

            // 3) 행 클릭 시 상세 페이지로 이동하는 기능
            tableBodyRows.forEach(row => {
                row.addEventListener('click', function(e) {
                    // 클릭된 요소가 체크박스이면 상세 페이지 이동을 막습니다.
                    if (e.target.type !== 'checkbox') {
                        // TR의 onclick 속성으로 대체
                        // location.href = this.getAttribute('onclick').match(/location.href='(.*?)'/)[1]; 
                    }
                });
            });
        });
    </script>
</body>
</html>
