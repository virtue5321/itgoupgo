<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="jakarta.tags.core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>

<!DOCTYPE html>

<html lang="ko">
<head>
<meta charset="UTF-8">
<title>관리자 - 공지사항 관리</title>
<link rel="stylesheet" href="<c:url value="/resources/css/adminStyle.css" />">
<style>
/* 페이징바 스타일 */
.pagination-container {
display: flex;
justify-content: center; /* */
padding: 20px 0;
gap: 5px;
}
.pagination-container a, .pagination-container span {
padding: 8px 12px;
text-decoration: none;
color: #333;
border: 1px solid #ddd; /* */
border-radius: 4px;
transition: background-color 0.3s;
}
.pagination-container a:hover {
background-color: #f0f0f0;
}
.pagination-container .active {
background-color: #5a5ce8;
color: white;
border-color: #5a5ce8; /* */
}
.status-text.deleted { color: red; font-weight: bold; }
/* [추가] 삭제된 게시글 행 스타일 */
.deleted-post { background-color: #f8f8f8; color: #999; }
.deleted-post a, .deleted-post .status-text { color: #999 !important; }
</style>
</head>
<body>

<div class="admin-container">
<h1 class="main-title">공지사항 게시글 관리</h1>

<div class="search-area">
  <form action="searchNotice" method="GET" onsubmit="return validateSearch(this);">
    <select name="condition" class="search-select">
      <option value="title">제목</option>
      <option value="content">내용</option>
      <%-- [제거] <option value="writer">작성자</option> --%>
    </select>
    <input type="text" name="keyword" class="search-input" placeholder="검색어를 입력하세요">
    <button type="submit" class="btn btn-search">검색</button>
  </form>
  <%-- [수정] deleteCheckedNotice -> deleteNoticeBbsCheck (Controller 함수명에 맞춤) --%>
  <button class="btn btn-danger" onclick="deleteCheckedPosts()">선택 글 비활성화</button>
</div>

<%-- [수정] 액션 URL --%>
<form action="<c:url value="/admin/deleteNoticeBbsCheck" />" method="POST" id="postManageForm">
  <table class="data-table">
    <thead>
      <tr>
        <th style="width: 5%;">
          <input type="checkbox" id="selectAllCheckboxPost">
        </th>
        <th style="width: 10%;">번호</th>
        <th style="width: 45%;">제목</th> <%-- [변경] 제목 너비 증가 (작성자 제거로 인해) --%>
        <%-- [제거] <th style="width: 15%;">작성자(ID)</th> --%>
        <th style="width: 15%;">작성일</th>
        <th style="width: 10%;">조회수</th>
        <th style="width: 10%;">상태</th>
  
        <th style="width: 5%;">상세</th> <%-- [변경] 상세 너비 감소 --%>
      </tr>
    </thead>
    <tbody>
      <c:choose>
        <c:when test="${!empty noticeBbsList}"> <%-- [수정] noticeList -> noticeBbsList (Controller에서 바인딩된 이름) --%>
          <c:forEach var="post" items="${noticeBbsList}">
            <%-- [추가] 삭제 상태에 따른 CSS 클래스 적용 --%>
            <tr class="${post.noticeDeleteStatus eq 'Y' ? 'deleted-post' : ''}">
              <td>
                <%-- [수정] postNoList -> bbsNoList (Controller에서 받는 이름), noticeNo 사용 --%>
                <input type="checkbox" class="itemCheckboxPost" name="bbsNoList" value="${post.noticeNo}"
                       <c:if test="${post.noticeDeleteStatus eq 'Y'}">disabled</c:if>>
              </td>
              <td>${post.noticeNo}</td>
              <td class="text-left">
                <c:choose>
                    <c:when test="${post.noticeDeleteStatus eq 'Y'}">
                        <span class="status-text deleted">[삭제됨]</span> ${post.noticeTitle}
                    </c:when>
                    <c:otherwise>
                        <a href="<c:url value="/notice/detail?no=${post.noticeNo}" />" class="title-link" target="_blank">
                          ${post.noticeTitle}
                        </a>
                    </c:otherwise>
                </c:choose>
              </td>
              <%-- [제거] 작성자 열 제거 --%>
              <td><fmt:formatDate value="${post.noticeCreateDate}" pattern="yyyy.MM.dd" /></td> <%-- [수정] 날짜 필드 --%>
              <td>${post.noticeView}</td> <%-- [수정] 조회수 필드 --%>
              <td>
                <span class="status-text ${post.noticeDeleteStatus eq 'Y' ? 'deleted' : 'active'}">
                  ${post.noticeDeleteStatus eq 'Y' ? '[비활성]' : '[활성]'}
                </span>
              </td>
              <td>
                <%-- [수정] 개별 삭제 버튼. deleteNoticeBbs?noticeNo 사용 --%>
                <button class="btn btn-sm btn-danger" 
                        onclick="deleteSinglePost(${post.noticeNo})"
                        <c:if test="${post.noticeDeleteStatus eq 'Y'}">disabled</c:if>>
                  삭제
                </button>
              </td>
            </tr>
          </c:forEach>
        </c:when>
        <c:otherwise>
          <tr>
            <td colspan="7">조회된 공지사항 게시글이 없습니다.</td> <%-- [변경] colspan 수 7로 감소 --%>
          </tr>
        </c:otherwise>
      </c:choose>
    </tbody>
  </table>
</form>

<div class="pagination-container">
    <c:set var="pi" value="${pageInfo}"/>
    <c:set var="pageLinkUrl" value="/admin/noticeBbsManage" />
    
    <c:choose><c:when test="${pi.currentPage le 1}"><span class="disabled">&lt;&lt;</span></c:when><c:otherwise><a href="<c:url value="${pageLinkUrl}" />?currentPage=1">&lt;&lt;</a></c:otherwise></c:choose>
    <c:choose><c:when test="${pi.currentPage le 1}"><span class="disabled">&lt;</span></c:when><c:otherwise><a href="<c:url value="${pageLinkUrl}" />?currentPage=${pi.currentPage - 1}">&lt;</a></c:otherwise></c:choose>
    
    <c:forEach begin="${pi.startPage}" end="${pi.endPage}" var="p">
        <c:choose><c:when test="${pi.currentPage eq p}"><span class="active">${p}</span></c:when><c:otherwise><a href="<c:url value="${pageLinkUrl}" />?currentPage=${p}">${p}</a></c:otherwise></c:choose>
    </c:forEach>
    
    <c:choose><c:when test="${pi.currentPage eq pi.maxPage || pi.maxPage eq 0}"><span class="disabled">&gt;</span></c:when><c:otherwise><a href="<c:url value="${pageLinkUrl}" />?currentPage=${pi.currentPage + 1}">&gt;</a></c:otherwise></c:choose>
    <c:choose><c:when test="${pi.currentPage eq pi.maxPage || pi.maxPage eq 0}"><span class="disabled">&gt;&gt;</span></c:when><c:otherwise><a href="<c:url value="${pageLinkUrl}" />?currentPage=${pi.maxPage}">&gt;&gt;</a></c:otherwise></c:choose>
</div>


</div>

<script>
// 🔴 1. 검색 유효성 검사
function validateSearch(form) {
const keyword = form.keyword.value.trim();
if (keyword === "") {
alert("검색어를 입력해주세요.");
return false;
}
return true;
}

// 🔴 2. 선택된 게시글 일괄 비활성화 (POST 요청)
function deleteCheckedPosts() {
    // [수정] 삭제되지 않은 게시글의 체크박스만 선택
    const selectedCheckboxes = Array.from(document.querySelectorAll('.itemCheckboxPost:checked')).filter(checkbox => {
        return !checkbox.closest('tr').classList.contains('deleted-post');
    });

    if (selectedCheckboxes.length === 0) {
        alert("삭제할 게시글을 하나 이상 선택해주세요. (이미 삭제된 게시글 제외)"); /* */
        return; /* */
    }

    if (confirm(`선택된 게시글 ${selectedCheckboxes.length}개를 정말로 비활성화(삭제 처리)하시겠습니까?`)) {
        const formElement = document.getElementById('postManageForm');
        
        // [수정] 기존에 임시로 추가했던 hidden input 제거 (postNoList 대신 bbsNoList로 통일)
        formElement.querySelectorAll('input[name="bbsNoList"]').forEach(input => input.remove());
        
        // 선택된 게시글 번호를 hidden input으로 추가
        selectedCheckboxes.forEach(checkbox => {
            const hiddenInput = document.createElement('input');
            hiddenInput.type = 'hidden';
            hiddenInput.name = 'bbsNoList'; // Controller의 @RequestParam 이름과 일치
            hiddenInput.value = checkbox.value;
            formElement.appendChild(hiddenInput);
        });
        formElement.submit(); 
    }
}

// [추가] 단일 게시글 삭제 함수
function deleteSinglePost(noticeNo) {
    if (confirm(`${noticeNo}번 게시글을 정말 삭제(비활성화) 처리하시겠습니까?`)) {
        location.href = "<c:url value="/admin/deleteNoticeBbs" />?noticeNo=" + noticeNo;
    }
}

// 🔴 3. 체크박스 전체 선택/해제 기능
document.addEventListener('DOMContentLoaded', (event) => {
    const selectAllCheckbox = document.getElementById('selectAllCheckboxPost');
    // [수정] 삭제된 게시글 제외한 체크박스만 대상으로 함
    const itemCheckboxes = document.querySelectorAll('.itemCheckboxPost:not(:disabled)');

    if (selectAllCheckbox) {
        selectAllCheckbox.addEventListener('change', function() {
            itemCheckboxes.forEach(checkbox => {
                checkbox.checked = this.checked;
            });
        });
    }
    
    itemCheckboxes.forEach(checkbox => { 
        checkbox.addEventListener('change', () => {
            const checkedItems = document.querySelectorAll('.itemCheckboxPost:checked:not(:disabled)').length;
            const totalItems = itemCheckboxes.length;

            if (!checkbox.checked) {
                if (selectAllCheckbox) selectAllCheckbox.checked = false;
            } else if (checkedItems === totalItems) {
                if (selectAllCheckbox) selectAllCheckbox.checked = true;
            }
        });
    });
});


</script>

</body>
</html>